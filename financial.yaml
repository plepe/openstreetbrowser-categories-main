type: overpass
name:
  ast: Dineru
  ca: Financer
  cs: Finanční služby
  de: Finanzen
  el: Χρήμα
  en: Financial
  es: Financiera
  fr: Finance
  gl: Finanzas
  hu: Pénzügyek
  it: Finanziario
  ja: 金融
  nb: Finansiell
  nl: Financieel
  oc: Finança
  pl: Finansowe
  pt: Finanças
  pt-br: Finanças e seguros
  ro: Financiar
  ru: Финансы
  sr: Финансије
  tr: Finansal
  uk: Фінанси
query:
  14: |-
    nwr[amenity~"^(.*;|)(bank)(;.*|)$"];
  15: |-
    (
    nwr[amenity~"^(.*;|)(bank|bureau_de_change|atm)(;.*|)$"];
    nwr[office~"^(.*;|)(financial|accountant|insurance|tax|tax_advisor)(;.*|)$"];
    )
feature:
  pre: |-
    {% set key = null %}
    {% set value = null %}

    {% for k, d in const %}
      {% set kv = k|split('=') %}
      {% if attribute(tags, kv[0]) and kv[1] in attribute(tags, kv[0])|split(';') %}
        {% set key = kv[0] %}
        {% set value = kv[1] %}
      {% endif %}
    {% endfor %}

    {% set kv = key ~ "=" ~ value %}
    {% set data = const[kv] %}
  description: |-
    {{ tagTransList(key, attribute(tags, key)) }}
  markerSign: |-
    {{ const[kv].sign|raw }}
info: |-
  <table>
  {% for kv, data in const %}
  {% if data.zoom <= map.zoom %}
    <tr>
      <td>{{ markerCircle({})|raw }}<div class='sign'>{{ data.sign|raw }}</div></td>
      <td>
        {{ tagTrans(kv|split('=')[0], kv|split('=')[1]) }}
      </td>
    </tr>
  {% endif %}
  {% endfor %}
  </table>
const:
  amenity=atm:
    sign: <img data-src='maki:bank?size=11'>
    zoom: 15
  amenity=bank:
    sign: <img data-src='maki:building'>
    zoom: 14
  amenity=bureau_de_change:
    sign: ⇄
    zoom: 15
  office=financial:
    sign: <i class="fas fa-coins"></i>
    zoom: 15
  office=accountant:
    sign: <i class="fas fa-book"></i>
    zoom: 15
  office=insurance:
    sign: <i class="fas fa-file-signature"></i>
    zoom: 15
  office=tax:
    sign: '%'
    zoom: 15
  office=tax_advisor:
    sign: '<span style="color: green">%</span>'
    zoom: 15
  office=cooperative:
    sign: <i class="fas fa-piggy-bank"></i>
    zoom: 15
filter:
  type:
    name: '{{ trans("filter:type") }}'
    show_default: 'true'
    type: select
    values: |-
      {% for k, v in const %}
      <option value="{{ k }}" query="nwr[{{ k|replace({ '=': '^' }) }}]" minzoom="{{ v.zoom }}">
      {{ tagTrans(k) }}
      </option>
      {% endfor %}
