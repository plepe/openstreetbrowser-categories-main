type: overpass
name:
  ast: Basures
  ca: Deixalles
  cs: Nakládání s odpady
  de: Entsorgung
  en: Disposal
  es: Basura
  fr: Déchets et recyclage
  gl: Lixo
  hu: Hulladék
  it: Smaltimento
  ja: 処理場
  nb: Avfall
  nl: Afvalverwijdering
  oc: Bordilhas e reciclatge
  pl: Przetwarzanie odpadów
  pt: Lixo
  pt-br: Resíduos
  ru: Переработка отходов
  sr: Отпад
  tr: Atık ve Geri Dönüşüm
query:
  13: |-
    (
    nwr[landuse=landfill];
    nwr[man_made~"^(wastewater_plant|incinerator)$"];
    nwr[amenity=recycling][recycling_type=centre];
    nwr[amenity=waste_transfer_station];
    nwr[power=generator]["generator:source"~"^(.*;|)waste(;.*|)$"];
    )
  15: |-
    (
    nwr[landuse=landfill];
    nwr[man_made~"^(wastewater_plant|incinerator)$"];
    nwr[amenity~"^(recycling|waste_disposal|waste_transfer_station)$"];
    nwr[power=generator]["generator:source"~"^(.*;|)waste(;.*|)$"];
    )
  18: |-
    (
    nwr[landuse=landfill];
    nwr[man_made~"^(wastewater_plant|incinerator)$"];
    nwr[amenity~"^(recycling|waste_basket|waste_disposal|waste_transfer_station)$"];
    nwr[power=generator]["generator:source"~"^(.*;|)waste(;.*|)$"];
    )
feature:
  pre: |-
    {% set key = null %}
    {% set value = null %}
    {% set add = '' %}

    {% for k, d in const %}
      {% set kv = k|split('=') %}
      {% if attribute(tags, kv[0]) and kv[1] in attribute(tags, kv[0])|split(';') %}
        {% set key = kv[0] %}
        {% set value = kv[1] %}
      {% endif %}
    {% endfor %}

    {% if key == 'power' and value == 'generator' %}
      {% set add = '(' ~ tagTransList('generator:source', attribute(tags, 'generator:source')) ~ ')' %}
    {% endif %}

    {% set kv = key ~ '=' ~ value %}
  description: '{{ tagTransList(key, attribute(tags, key)) }} {{ add }}'
  body: |-
    {% if tags.recycling_type %}
    {{ keyTrans('recycling_type') }}: {{ tagTrans('recycling_type', tags.recycling_type) }}
    {% endif %}
  markerSign: |-
    {% if const[kv] %}
    {{ const[kv].sign|raw }}
    {% endif %}
info: |-
  <table>
  {% for kv, data in const %}
    {% if map.zoom >= data.minZoom %}
    {% set key  = kv|split('=')[0] %}
    {% set value  = kv|split('=')[1] %}
    <tr>
      <td>{{ markerCircle({})|raw }}<div class='sign'>{{ data.sign|raw }}</div></td>
      <td>{{ tagTrans(key, value) }}{% if data.add %} ({{ trans(data.add) }}){% endif %}</td>
    </tr>
    {% endif %}
  {% endfor %}
    <tr>
      <td>{{ markerCircle({})|raw }}</td>
      <td>{{ trans('other') }}</td>
    </tr>
  </table>
filter:
  type:
    name: '{{ trans("filter:type") }}'
    show_default: 'true'
    type: select
    values: |-
      {% for k, v in const %}
      <option value="{{ k }}" query="nwr[{{ k|replace({ '=': '^' }) }}]" minzoom="{{ v.zoom }}">
      {{ tagTrans(k) }}
      </option>
      {% endfor %}
const:
  amenity=recycling:
    minZoom: 13
    sign: <img data-src='maki:recycling'>
  man_made=wastewater_plant:
    minZoom: 13
    sign: <i class='fas fa-water'></i>
  man_made=incinerator:
    minZoom: 13
    sign: <i class='fas fa-burn'></i>
  power=generator:
    minZoom: 13
    sign: <i class='fas fa-bolt'></i>
    add: tag:generator:source=waste
  amenity=waste_disposal:
    minZoom: 15
    sign: <img data-src='maki:waste-basket'>
  amenity=waste_basket:
    minZoom: 18
    sign: <img data-src='maki:waste-basket'>
